openapi: 3.0.3
info:
  title: Simplified login API specification
  description: |-
    This OpenAPI document describes the simplified login API.
  version: "1"
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Maria"
                  pattern: 'Ë†.*?$'
                  minLength: 3
                  maxLength: 16
              required:
                - name
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    example: "abcdef012345"
  /user/name:
    put:
      tags: ["user"]
      summary: Updates the user's name
      description: |-
        Updates the name of the current user. The new name must be unique and follow the specified length constraints.
      operationId: setMyUserName
      requestBody:
        description: New username details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  example: "JohnDoe"
                  pattern: '^[a-zA-Z0-9_-]*$'
                  minLength: 3
                  maxLength: 16
              required:
                - newName
      responses:
        '200':
          description: Username updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Username updated successfully."
        '400':
          description: Username already in use or does not meet the criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Username already taken or invalid format."
