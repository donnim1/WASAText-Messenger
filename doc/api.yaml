openapi: 3.0.3
info:
  title: WASAText API Specification
  description: |-
    This OpenAPI document describes the WASAText API, allowing users to log in, manage conversations, send messages, and create groups.
  version: "1"
tags:
  - name: login
    description: Operations related to user login and authentication
  - name: user
    description: Operations related to user profile management
  - name: conversations
    description: Operations related to managing conversations and messages
  - name: groups
    description: Operations related to group management

paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        Logs in an existing user or creates a new user if the username does not exist. 
        Returns an identifier that can be used as a token in the Authorization header.
      operationId: doLogin
      requestBody:
        description: Details of the user attempting to log in
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The username to log in or register
                  example: "Maria"
                  pattern: '.*'
                  minLength: 3
                  maxLength: 16
              required:
                - name
      responses:
        '201':
          description: User login or registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    description: Unique user identifier for session authorization
                    example: "abcdef012345"

  /user/name:
    put:
      tags: ["user"]
      summary: Updates the user's name
      description: |-
        Updates the username of the current user. 
        The new name must be unique and meet specified length constraints.
      operationId: setMyUserName
      requestBody:
        description: New username details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  description: The new username to assign to the user
                  example: "JohnDoe"
                  pattern: '^[a-zA-Z0-9_-]*$'
                  minLength: 3
                  maxLength: 16
              required:
                - newName
      responses:
        '200':
          description: Username updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message indicating username was updated
                    example: "Username updated successfully."
        '400':
          description: Username already in use or does not meet the criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message for failed username update
                    example: "Username already taken or invalid format."

  /conversations:
    get:
      tags: ["conversations"]
      summary: Retrieve a list of user's conversations
      description: Retrieves all conversations of the logged-in user.
      operationId: getMyConversations
      responses:
        '200':
          description: List of conversations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    conversationId:
                      type: string
                      description: Unique identifier for the conversation
                    title:
                      type: string
                      description: Name of the user or group
                    lastMessage:
                      type: string
                      description: Preview of the last message in the conversation
                    timestamp:
                      type: string
                      description: Timestamp of the last message
                    unreadCount:
                      type: integer
                      description: Number of unread messages in the conversation

  /conversations/{conversationId}:
    get:
      tags: ["conversations"]
      summary: Retrieve a specific conversation by ID
      description: Retrieves all messages within a specific conversation.
      operationId: getConversation
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of messages in the conversation retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    messageId:
                      type: string
                      description: Unique identifier for the message
                    sender:
                      type: string
                      description: Username of the message sender
                    content:
                      type: string
                      description: Message content (text or photo link)
                    timestamp:
                      type: string
                      description: Timestamp of the message

  /messages:
    post:
      tags: ["conversations"]
      summary: Send a message to a user or group
      description: Sends a new message in a specified conversation.
      operationId: sendMessage
      requestBody:
        description: Details of the message to be sent
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conversationId:
                  type: string
                  description: The ID of the conversation where the message is sent
                content:
                  type: string
                  description: Message content (text or photo link)
              required:
                - conversationId
                - content
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: string
                    description: Unique identifier of the sent message

  /groups:
    post:
      tags: ["groups"]
      summary: Create a new group
      description: Creates a new group for the user to have group conversations.
      operationId: createGroup
      requestBody:
        description: Details of the group to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                groupName:
                  type: string
                  description: Name of the group
                members:
                  type: array
                  description: List of user IDs to add to the group
                  items:
                    type: string
              required:
                - groupName
                - members
      responses:
        '201':
          description: Group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  groupId:
                    type: string
                    description: Unique identifier of the created group

  /groups/{groupId}/members:
    post:
      tags: ["groups"]
      summary: Add a user to an existing group
      description: Adds a user to an existing group by user ID.
      operationId: addToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: User ID to add to the group
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ID of the user to add to the group
              required:
                - userId
      responses:
        '200':
          description: User added to group successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

  
